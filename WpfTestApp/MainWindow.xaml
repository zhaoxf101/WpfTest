<Window x:Class="CustomBA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CustomBA"
        mc:Ignorable="d"
        Title="云合景从 - 安装程序" Height="400" Width="750" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" MouseLeftButtonDown="Window_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border BorderThickness="0" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <!--<Border Name="Mask" Background="Gray" Opacity="0" />-->
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Red" />
                            </Trigger>-->
                            <!--<Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#DFDFDF" />
                                <Setter Property="Padding" Value="0,2,0,0" />
                                <Setter TargetName="Mask" Property="Opacity" Value="0.5" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ControlButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#979797" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <!--<Setter Property="Foreground" Value="#EFEFEF" />-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter Property="Foreground" Value="#DFDFDF" />-->
                                <Setter Property="Padding" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="InstallButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontSize" Value="28" />
            <Setter Property="Foreground" Value="#f88d23" />
            <Setter Property="Background" Value="#e1e1e1" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0" CornerRadius="25" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#ededed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#cfcfcf" />
                                <Setter Property="Padding" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#b0b0b0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PolicyHyperlinkStyle" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="Foreground" Value="Green"></Setter>-->
                    <!--在鼠标悬停显示下划线-->
                    <Setter Property="TextBlock.TextDecorations">
                        <Setter.Value>
                            <TextDecorationCollection>
                                <TextDecoration Location="Underline"/>
                            </TextDecorationCollection>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="InstallFolderHyperlinkStyle" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="#cccccc"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="TextBlock.TextDecorations" Value="Underline"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="Foreground" Value="Green"></Setter>-->
                    <!--在鼠标悬停显示下划线-->
                    <!--<Setter Property="TextBlock.TextDecorations">
                        <Setter.Value>
                            <TextDecorationCollection>
                                <TextDecoration Location="Underline"/>
                            </TextDecorationCollection>
                        </Setter.Value>
                    </Setter>-->
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="CheckImage" Source="/images/unchecked.png" Width="16" Height="16" Margin="0,1,9,0" VerticalAlignment="Center" />
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Source" Value="/images/checked.png" TargetName="CheckImage" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="#444444"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <!--背景、边框-->
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto"></ScrollViewer>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="#a2a2a2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" Value="#ffce6f" />
                            </Trigger>-->
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter Property="Background" Value="#f0c369" />-->
                                <Setter Property="Padding" Value="1,2,1,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AgreeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Background" Value="#f88d23" />
            <Setter Property="BorderBrush" Value="#f88d23"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" Value="#ffce6f" />
                            </Trigger>-->
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter Property="Background" Value="#f0c369" />-->
                                <Setter Property="Padding" Value="1,2,1,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Height" Value="10" />
            <Setter Property="Foreground" Value="#10bd6a"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#10bd6a"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--<Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>-->
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid Name="GridInstall" Visibility="Collapsed">
            <Grid.Background>
                <ImageBrush ImageSource="/images/bg.png"  />
            </Grid.Background>

            <Button Name="BtnInstall" Click="BtnInstall_Click" Content="快速安装" Margin="0 222 0 0" Height="54" VerticalAlignment="Top" HorizontalAlignment="Center" Width="220" Style="{StaticResource InstallButtonStyle}"/>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 298 0 0" Orientation="Horizontal">
                <CheckBox Style="{StaticResource CheckBoxStyle1}" IsChecked="True">
                    <TextBlock Foreground="#999999" FontSize="16">已阅读并接受<Hyperlink Click="HyperlinkPolicy_Click" Style="{StaticResource PolicyHyperlinkStyle}">《用户协议》</Hyperlink></TextBlock>
                </CheckBox>
            </StackPanel>

            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="7"><Hyperlink Click="HyperlinkInstallFolder_Click" Style="{StaticResource InstallFolderHyperlinkStyle}">自定义安装目录</Hyperlink></TextBlock>

            <Grid Name="GridPolicy" Background="White" Width="610" Height="360" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBox Name="TxtPolicy" Style="{StaticResource TextBoxStyle1}" Margin="22 10" />
                <Border Grid.Row="1" BorderThickness="0" Background="#f7f7f7">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="30" VerticalAlignment="Bottom" Margin="0,6,0,4">
                        <Button Name="BtnBack" Click="BtnBack_Click" Content="返回" Style="{StaticResource BackButtonStyle}" Width="100" Margin="10,0,10,0" />
                        <Button Name="BtnAgree" Click="BtnAgree_Click" Content="我同意" Style="{StaticResource AgreeButtonStyle}" Width="100" Margin="10,0,10,0" />
                    </StackPanel>
                </Border>

            </Grid>

            <Grid Name="GridInstallFolder" Background="White" Height="180" VerticalAlignment="Bottom" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Margin="50 28 0 8" FontSize="16" Foreground="#333">安装目录：</TextBlock>
                <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBox Grid.Row="0" Name="TxtInstallFolder" Width="550" Height="30" Background="White" BorderBrush="#bbbbbb" BorderThickness="1" Margin="0 0 8 0" HorizontalAlignment="Left" />
                    <Button Style="{StaticResource BackButtonStyle}" FontSize="16" Content="更改目录" Width="92" Height="30" Foreground="#666" />
                </StackPanel>
                <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center" Height="30" VerticalAlignment="Center" Margin="0,6,0,4">
                    <Button Name="BtnBackInstallFolder" Click="BtnBackInstallFolder_Click" Content="返回" Style="{StaticResource BackButtonStyle}" Width="100" Margin="10,0,10,0" />
                    <Button Name="BtnOkInstallFolder" Click="BtnOkInstallFolder_Click" Content="安装" Style="{StaticResource AgreeButtonStyle}" Width="100" Margin="10,0,10,0" />
                </StackPanel>
            </Grid>
        </Grid>

        <Grid Name="GridRepair" Visibility="Hidden" d:IsHidden="True">
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="WhiteSmoke" Offset="1" />
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition  Width="2*"/>
                <ColumnDefinition  Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition  Height="35" />
                <RowDefinition  Height="45"/>
                <RowDefinition />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="2" Grid.Column="1">
                <Button Name="BtnUninstall" Click="BtnUninstall_Click" Content="卸载" IsDefault="True" HorizontalAlignment="Left" Margin="10 10" Height="35" Width="120" Style="{StaticResource AgreeButtonStyle}" Background="Tomato"></Button>
            </StackPanel>
        </Grid>

        <Grid Name="GridProgress" Visibility="Collapsed">
            <Grid.Background>
                <ImageBrush ImageSource="/images/bg4.png" />
            </Grid.Background>
            <Grid Height="60" VerticalAlignment="Bottom" Background="White">
                <StackPanel VerticalAlignment="Center" Margin="45 0">
                    <ProgressBar Name="ProgressBarMain" Style="{StaticResource ProgressBarStyle1}" IsIndeterminate="False" Margin="0 3" Value="70" />
                    <TextBlock Name="TxtProgress" Text="正在安装，请稍候..." FontSize="12" Foreground="#666" />
                </StackPanel>
            </Grid>
        </Grid>

        <Grid Name="GridComplete" Visibility="Visible">
            <Grid.Background>
                <ImageBrush ImageSource="/images/bg5.png" />
            </Grid.Background>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 120 0 0">
                <Image Source="/images/success.png" Width="62" Height="62" />
                <TextBlock Name="TxtComplete" Text="安装成功" FontSize="40" Foreground="White" VerticalAlignment="Center" Margin="10 0 0 0" />
            </StackPanel>
            <Grid Height="150" Background="White" VerticalAlignment="Bottom">
                <Button Name="BtnOk" Click="BtnOk_Click" Content="完成安装" IsDefault="True" HorizontalAlignment="Center" Height="36" Width="100" Style="{StaticResource BackButtonStyle}"></Button>
            </Grid>
        </Grid>

        <TextBlock Text="云合景从1.0正式版" Foreground="#979797" FontSize="14" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top"/>

        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Margin="0 5 5 0">
            <Button x:Name="BtnMinimize" Width="18" Height="18" Margin="0,2,2,0" Click="BtnMinimize_Click" Style="{StaticResource ControlButtonStyle}">
                <Path Data="F1M0,0L12,0 12,2 0,2 0,0z" Fill="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}},Path=Foreground}" Stretch="Fill" Width="12" Height="1" Margin="0,6,0,0" />
            </Button>
            <Button x:Name="BtnClose" Width="18" Height="18" Margin="2,3,5,0" Click="BtnClose_Click" Style="{StaticResource ControlButtonStyle}">
                <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z" Fill="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}},Path=Foreground}" Stretch="Fill" Width="12" Height="10" />
            </Button>
        </StackPanel>
    </Grid>
</Window>
