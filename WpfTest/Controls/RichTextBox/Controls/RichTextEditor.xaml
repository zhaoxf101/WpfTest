<UserControl
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            x:Class="Xceed.Wpf.Toolkit.RichTextEditor" x:Name="MainRichTextEditor" Background="White" Foreground="#444">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0" />
            <GradientStop Color="#EDEDED" Offset="0.20" />
            <GradientStop Color="#EDEDED" Offset="0.80" />
            <GradientStop Color="#E3E3E3" Offset="1" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4" />

        <Style x:Key="ScrollBarButtonUp" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border x:Name="Border"
                                Background="Transparent" />
                            <Path x:Name="IconArrowDecreasePath" Opacity="1" Data="M 337.57757568359375,322 C337.57757568359375,322 334,326 334,326 334,326 341,326 341,326 341,326 337.57757568359375,322 337.57757568359375,322 z" Height="4" Stretch="Uniform" Width="8">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="ButtonColor" Color="#FFCECECE" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused"
                                 Value="true"/>
                            <Trigger Property="IsMouseOver"
                                 Value="true">
                                <Setter Property="Fill"
                                   Value="#888888"
                                   TargetName="IconArrowDecreasePath" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                 Value="true"/>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Opacity"
                                   Value="0.5"
                                   TargetName="IconArrowDecreasePath" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarButtonDown" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border x:Name="Border" Background="Transparent" />
                            <Path x:Name="IconArrowIncreasePath" Data="M 337.42242431640625,334 C337.42242431640625,334 341,330 341,330 341,330 334,330 334,330 334,330 337.42242431640625,334 337.42242431640625,334 z" Height="4" Stretch="Uniform" Width="8" Fill="#FFCECECE" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" Value="#888888" TargetName="IconArrowIncreasePath" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5" TargetName="IconArrowIncreasePath" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarButtonLeft" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border x:Name="Border" Background="Transparent" />
                            <Path x:Name="IconArrowLeftPath" Data="M 331,327.42242431640625 C331,327.42242431640625 335,331 335,331 335,331 335,324 335,324 335,324 331,327.42242431640625 331,327.42242431640625 z" Stretch="Uniform" Height="7" Width="4" Fill="#FFCECECE" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" Value="#888888" TargetName="IconArrowLeftPath" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5" TargetName="IconArrowLeftPath" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarButtonRight" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Border x:Name="Border" Background="Transparent" />
                            <Path x:Name="IconArrowRightPath" Data="M 343,327.57757568359375 C343,327.57757568359375 339,324 339,324 339,324 339,331 339,331 339,331 343,327.57757568359375 343,327.57757568359375 z" Height="7" Width="4" Stretch="Uniform" Fill="#FFCECECE" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" Value="#888888" TargetName="IconArrowRightPath" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true" />
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5" TargetName="IconArrowRightPath" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid" Margin="0,0,0,0">
                            <Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" Opacity="1" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#FFCECECE" />
                            <Rectangle HorizontalAlignment="Stretch" x:Name="RectangleOver" Opacity="0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#888888" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="RectangleOver" Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="RectangleOver" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" TargetName="Rectangle" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid" Margin="0,0,0,0">
                            <Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" Opacity="1" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#FFCECECE" />
                            <Rectangle HorizontalAlignment="Stretch" x:Name="RectangleOver" Opacity="0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="#888888" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="RectangleOver" Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="RectangleOver" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" TargetName="Rectangle" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#E1E1E1" Offset="0" />
            <GradientStop Color="#EDEDED" Offset="0.20" />
            <GradientStop Color="#EDEDED" Offset="0.80" />
            <GradientStop Color="#E3E3E3" Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}" />
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Width" Value="17" />
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource ScrollBarButtonUp}" />
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" Width="7" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource ScrollBarButtonDown}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource ScrollBarButtonLeft}" />
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" Height="7" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource ScrollBarButtonRight}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Style.Resources>
                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarStyle}" />
            </Style.Resources>
            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#666"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#aaacb2"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Padding" Value="4,3,4,3" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="4,0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" FontFamily="{Binding}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="DropDownBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ClickMode" Value="Press"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                        <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                            <Path x:Name="Arrow" Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <!--<ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="RenderPressed" TargetName="Chrome" Value="True"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>-->
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <!--ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"-->
                            <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                            </Trigger>-->
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                <Setter Property="Background" Value="#FFF4F4F4"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="True"/>
                                    <Condition>
                                        <Condition.Value>
                                            <System:Boolean>False</System:Boolean>
                                        </Condition.Value>
                                    </Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </MultiTrigger>
                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="rtbContextMenu" StaysOpen="False">
            <MenuItem Command="ApplicationCommands.Cut">
                <MenuItem.Icon>
                    <Image Source="Images/cut.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Copy">
                <MenuItem.Icon>
                    <Image Source="Images/page_copy.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Paste">
                <MenuItem.Icon>
                    <Image Source="Images/page_paste.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Undo">
                <MenuItem.Icon>
                    <Image Source="Images/editundo.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="ApplicationCommands.Redo">
                <MenuItem.Icon>
                    <Image Source="Images/editredo.png"/>
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Command="EditingCommands.ToggleBold">
                <MenuItem.Icon>
                    <Image Source="Images/text_bold.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.ToggleItalic">
                <MenuItem.Icon>
                    <Image Source="Images/text_italic.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.ToggleUnderline">
                <MenuItem.Icon>
                    <Image Source="Images/text_underline.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.IncreaseFontSize">
                <MenuItem.Icon>
                    <Image Source="Images/charactergrowfont.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.DecreaseFontSize">
                <MenuItem.Icon>
                    <Image Source="Images/charactershrinkfont.png"/>
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Command="EditingCommands.ToggleBullets">
                <MenuItem.Icon>
                    <Image Source="Images/text_list_bullets.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.ToggleNumbering">
                <MenuItem.Icon>
                    <Image Source="Images/text_list_numbers.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.AlignLeft">
                <MenuItem.Icon>
                    <Image Source="Images/text_align_left.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.AlignCenter">
                <MenuItem.Icon>
                    <Image Source="Images/text_align_center.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.AlignRight">
                <MenuItem.Icon>
                    <Image Source="Images/text_align_right.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.AlignJustify">
                <MenuItem.Icon>
                    <Image Source="Images/text_align_justify.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.IncreaseIndentation">
                <MenuItem.Icon>
                    <Image Source="Images/text_indent.png"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Command="EditingCommands.DecreaseIndentation">
                <MenuItem.Icon>
                    <Image Source="Images/text_indent_remove.png"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        <Style x:Key="ToolBarStyle" TargetType="{x:Type ToolBar}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Visibility" Value="Visible" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ToolBarControlTemplate1" TargetType="{x:Type ToolBar}">
            <Grid x:Name="Grid" Margin="0" SnapsToDevicePixels="True">
                <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="CornerRadius" Value="0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="true">
                                    <Setter Property="CornerRadius" Value="0"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                        <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </DockPanel>
                </Border>
            </Grid>
        </ControlTemplate>

        <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFFFB700" />
        <LinearGradientBrush x:Key="MouseOverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFFEFBF4" />
            <GradientStop Offset="0.19" Color="#FFFDE7CE" />
            <GradientStop Offset="0.39" Color="#FFFDDEB8" />
            <GradientStop Offset="0.39" Color="#FFFFCE6B" />
            <GradientStop Offset="0.79" Color="#FFFFDE9A" />
            <GradientStop Offset="1" Color="#FFFFEBAA" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="CheckedBorderBrush" Color="#FFC29B29" />
        <LinearGradientBrush x:Key="CheckedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFFFDCA0" />
            <GradientStop Offset="0.18" Color="#FFFFD692" />
            <GradientStop Offset="0.39" Color="#FFFFC45D" />
            <GradientStop Offset="1" Color="#FFFFD178" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="PressedBorderBrush" Color="#FFC29B29" />
        <LinearGradientBrush x:Key="PressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFE3C085" />
            <GradientStop Offset="0.19" Color="#FFF4CC89" />
            <GradientStop Offset="0.36" Color="#FFF5C777" />
            <GradientStop Offset="0.36" Color="#FFF5BB56" />
            <GradientStop Offset="0.79" Color="#FFF4CE9A" />
            <GradientStop Offset="1" Color="#FFF3E28D" />
        </LinearGradientBrush>

        <Style x:Key="SeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Margin" Value="4" />
        </Style>

        <Style x:Key="FormatBarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
            <Setter Property="ToolTipService.ShowDuration" Value="20000" />
            <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid SnapsToDevicePixels="True">
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" />
                            <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2">
                                <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MouseOverBackgroundBrush}" />
                                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource MouseOverBorderBrush}" />
                                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="Content" Value="0.5" />
                                <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource PressedBackgroundBrush}" />
                                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource PressedBorderBrush}" />
                                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FormatBarToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Height" Value="22" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
            <Setter Property="ToolTipService.ShowDuration" Value="20000" />
            <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid SnapsToDevicePixels="True">
                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" />
                            <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2">
                                <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2" Padding="{TemplateBinding Padding}">
                                    <StackPanel x:Name="StackPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                        <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" Margin="1" RenderOptions.BitmapScalingMode="NearestNeighbor" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                    </StackPanel>
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MouseOverBackgroundBrush}" />
                                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource MouseOverBorderBrush}" />
                                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="Content" Value="0.5" />
                                <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource CheckedBackgroundBrush}" />
                                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource CheckedBorderBrush}" />
                                <Setter Property="BorderBrush" TargetName="InnerBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFE7CBAD" Offset="0" />
                                            <GradientStop Color="#FFF7D7B5" Offset="0.1" />
                                            <GradientStop Color="#FFFFD38C" Offset="0.36" />
                                            <GradientStop Color="#FFFFC75A" Offset="0.36" />
                                            <GradientStop Color="#FFFFEFA5" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource PressedBackgroundBrush}" />
                                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource PressedBorderBrush}" />
                                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent" />
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="MiddleBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#40FFFEFE" Offset="0" />
                                            <GradientStop Color="#40FFFEFE" Offset="0.39" />
                                            <GradientStop Color="#20FFCE68" Offset="0.39" />
                                            <GradientStop Color="#20FFCE68" Offset="0.69" />
                                            <GradientStop Color="#10FFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="{Binding BorderBrush, ElementName=MainRichTextEditor}">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="menuRow" Height="Auto" />
            <RowDefinition x:Name="contentRow" Height="*" />
        </Grid.RowDefinitions>
        <ToolBar Grid.Row="0" x:Name="MainToolBar"  ToolBarTray.IsLocked="True" IsEnabled="{Binding IsToolBarVisible, ElementName=MainRichTextEditor}"  Style="{DynamicResource ToolBarStyle}" Background="{Binding BorderBrush, ElementName=MainRichTextEditor}" Foreground="{Binding Foreground, ElementName=MainRichTextEditor}"  BorderBrush="{Binding BorderBrush, ElementName=MainRichTextEditor}"  BorderThickness="{Binding BorderThickness, ElementName=MainRichTextEditor}"  Template="{DynamicResource ToolBarControlTemplate1}">
            <Button Style="{StaticResource FormatBarButtonStyle}" Command="ApplicationCommands.Cut" ToolTip="剪切">
                <Image Source="Images/cut.png" Width="16" Height="16" />
            </Button>
            <Button Style="{StaticResource FormatBarButtonStyle}" Command="ApplicationCommands.Copy" ToolTip="复制">
                <Image Source="Images/page_copy.png" Width="16" Height="16" />
            </Button>
            <Button Style="{StaticResource FormatBarButtonStyle}" Command="ApplicationCommands.Paste" ToolTip="粘贴">
                <Image Source="Images/page_paste.png" Width="16" Height="16" />
            </Button>
            <Button Style="{StaticResource FormatBarButtonStyle}" Command="ApplicationCommands.Undo" ToolTip="撤消">
                <Image Source="Images/editundo.png" Width="16" Height="16" />
            </Button>
            <Button Style="{StaticResource FormatBarButtonStyle}" Command="ApplicationCommands.Redo" ToolTip="重做">
                <Image Source="Images/editredo.png" Width="16" Height="16" />
            </Button>
            <Separator Style="{StaticResource SeparatorStyle}" />

            <ComboBox x:Name="CmbFontFamilies" Style="{StaticResource ComboBoxStyle}" IsEditable="False" IsReadOnly="True" Width="150" ToolTip="字体" SelectionChanged="CmbFontFamilies_SelectionChanged" />
            <ComboBox x:Name="CmbFontSizes" Style="{StaticResource ComboBoxStyle}" IsEditable="False" IsReadOnly="True" Width="50" ToolTip="字号" SelectionChanged="CmbFontSizes_SelectionChanged" />

            <Button Style="{StaticResource FormatBarButtonStyle}" ToolTip="文本颜色" Click="BtnTextColor_Click">
                <Image Source="Images/color_text.png" Width="16" Height="16" />
            </Button>
            <Button Style="{StaticResource FormatBarButtonStyle}" ToolTip="背景颜色" Click="BtnBackgroundColor_Click">
                <Image Source="Images/color_back.png" Width="16" Height="16" />
            </Button>
            <Separator Style="{StaticResource SeparatorStyle}" />

            <ToggleButton x:Name="BtnBold" Style="{StaticResource FormatBarToggleButtonStyle}" Command="EditingCommands.ToggleBold" CommandTarget="{Binding Target, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="加粗">
                <Image Source="Images/text_bold.png" Width="16" Height="16" />
            </ToggleButton>
            <ToggleButton x:Name="BtnItalic" Style="{StaticResource FormatBarToggleButtonStyle}" Command="{x:Static EditingCommands.ToggleItalic}" ToolTip="倾斜">
                <Image Source="Images/text_italic.png" Width="16" Height="16" />
            </ToggleButton>
            <ToggleButton x:Name="BtnUnderline" Style="{StaticResource FormatBarToggleButtonStyle}" Command="{x:Static EditingCommands.ToggleUnderline}" ToolTip="下划线">
                <Image Source="Images/text_underline.png" Width="16" Height="16" />
            </ToggleButton>

            <!--<xt:ColorPicker ShowDropDownButton="true" ToolTip="Select font color" ShowAvailableColors="False" SelectedColorChanged="FontColorPicker_SelectedColorChanged" Width="40" />-->
            <Separator Style="{StaticResource SeparatorStyle}" />

            <RadioButton x:Name="BtnAlignLeft" Style="{StaticResource FormatBarToggleButtonStyle}" Command="{x:Static EditingCommands.AlignLeft}" ToolTip="左对齐">
                <Image Source="Images/text_align_left.png" Width="16" Height="16" />
            </RadioButton>
            <RadioButton x:Name="BtnAlignCenter" Style="{StaticResource FormatBarToggleButtonStyle}" Command="{x:Static EditingCommands.AlignCenter}" ToolTip="居中">
                <Image Source="Images/text_align_center.png" Width="16" Height="16" />
            </RadioButton>

            <RadioButton x:Name="BtnAlignRight" Style="{StaticResource FormatBarToggleButtonStyle}" Command="{x:Static EditingCommands.AlignRight}" ToolTip="右对齐">
                <Image Source="Images/text_align_right.png" Width="16" Height="16" />
            </RadioButton>

            <RadioButton x:Name="BtnAlignJustify" Style="{StaticResource FormatBarToggleButtonStyle}" Command="{x:Static EditingCommands.AlignJustify}" ToolTip="两端对齐">
                <Image Source="Images/text_align_justify.png" Width="16" Height="16" />
            </RadioButton>
            <Separator Style="{StaticResource SeparatorStyle}" />

            <ToggleButton x:Name="BtnBullets" Style="{StaticResource FormatBarToggleButtonStyle}" Command="EditingCommands.ToggleBullets" ToolTip="项目符号">
                <Image Source="Images/text_list_bullets.png" Width="16" Height="16" />
            </ToggleButton>
            <ToggleButton x:Name="BtnNumbers" Style="{StaticResource FormatBarToggleButtonStyle}" Command="EditingCommands.ToggleNumbering" ToolTip="编号">
                <Image Source="Images/text_list_numbers.png" Width="16" Height="16" />
            </ToggleButton>
            <Separator Style="{StaticResource SeparatorStyle}" />

            <Button Style="{StaticResource FormatBarButtonStyle}" Command="EditingCommands.IncreaseIndentation" ToolTip="增加缩进量">
                <Image Source="Images/text_indent.png" Width="16" Height="16" />
            </Button>
            <Button Style="{StaticResource FormatBarButtonStyle}" Command="EditingCommands.DecreaseIndentation" ToolTip="减少缩进量">
                <Image Source="Images/text_indent_remove.png" Width="16" Height="16" />
            </Button>
            <Separator Style="{StaticResource SeparatorStyle}" />

            <Button x:Name="BtnInsertLink" Style="{StaticResource FormatBarButtonStyle}" Click="BtnInsertLink_Click" ToolTip="插入超链接">
                <Grid>
                    <Image Source="Images/world_link.png" Width="16" Height="16" />
                    <Popup x:Name="uriInputPopup" StaysOpen="False" PlacementTarget="{Binding ElementName=BtnInsertLink, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal" Background="Silver">
                            <TextBox Margin="2,2,0,2" x:Name="uriInput" Width="100" KeyUp="UriInput_KeyPressed" />
                            <Button Margin="0,2" x:Name="uriSubmit" Click="UriSubmitClick">
                                <Image Source="Images/tick.png" Width="16" Height="16" />
                            </Button>
                            <Button Margin="0,2,2,2" x:Name="uriCancel" Click="UriCancelClick">
                                <Image Source="Images/cross.png" Width="16" Height="16" />
                            </Button>
                        </StackPanel>
                    </Popup>
                </Grid>
            </Button>
            <Separator Style="{StaticResource SeparatorStyle}" />

            <Button x:Name="BtnUploadImage" Click="BtnUploadImage_Click" Style="{StaticResource FormatBarButtonStyle}" ToolTip="插入图片">
                <Image Source="Images/image_upload.png" Width="16" Height="16" />
            </Button>
        </ToolBar>

        <RichTextBox Grid.Row="1" x:Name="MainRichTextBox" AcceptsTab="True" MinHeight="100" IsReadOnly="{Binding IsReadOnly, ElementName=MainRichTextEditor}" ContextMenu="{DynamicResource rtbContextMenu}" ContextMenuOpening="ContextMenu_ContextMenuOpening" Background="{Binding Background, ElementName=MainRichTextEditor}" Foreground="{Binding Foreground, ElementName=MainRichTextEditor}" BorderBrush="{Binding BorderBrush, ElementName=MainRichTextEditor}" BorderThickness="{Binding BorderThickness, ElementName=MainRichTextEditor}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" SelectionChanged="MainRichTextBox_SelectionChanged">
            <!--<RichTextBox.CommandBindings>
                <CommandBinding Command="Paste" Executed="CommandBinding_Executed"></CommandBinding>
            </RichTextBox.CommandBindings>-->
        </RichTextBox>
    </Grid>
</UserControl>